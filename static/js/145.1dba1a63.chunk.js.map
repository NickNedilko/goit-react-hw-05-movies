{"version":3,"file":"static/js/145.1dba1a63.chunk.js","mappings":"kMACA,EAA2B,4BAA3B,EAAkE,4BAAlE,EAA2G,8B,SC4B3G,EAzBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,gBACGJ,QADH,IACGA,OADH,EACGA,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,WAA3B,OACX,eAAaN,UAAWC,EAAxB,UACE,UAAC,EAAAM,KAAD,CAAMC,GAAE,iBAAYL,GAAMM,MAAO,CAAEC,KAAMZ,GAAzC,WACE,gBACEE,UAAWC,EACXU,IACkB,OAAhBN,EAAA,yCACsCA,GADtC,wDAIFO,IAAKR,KAEP,wBAAKA,KACL,uBAAIE,QAZCH,EADE,KAmBlB,C,2GCJD,EArBmB,SAAC,GAAkB,IAAhBU,EAAe,EAAfA,SACpB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAYA,OACE,kBAAMH,SANW,SAAAI,GACjBA,EAAEC,iBACFL,EAASE,EACV,EAGC,WACE,kBAAOI,KAAK,OAAOC,SAZH,SAAAH,GAClB,IAAMI,EAASJ,EAAEK,OAAOC,MACxBP,EAAUK,EACX,EAS6CE,MAAOR,KACjD,mBAAQI,KAAK,SAAb,sBAGL,E,iBCYD,EA3Be,WACb,OAAsCL,EAAAA,EAAAA,UAAS,IAA/C,eAAOU,EAAP,KAAoBC,EAApB,KAEA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMP,EAASM,EAAaE,IAAI,WAEhCC,EAAAA,EAAAA,YAAU,WACO,OAAXT,IAGJU,EAAAA,EAAAA,IAAeV,GAAQW,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcR,EAAeQ,EAAKC,QAAlC,GAC7B,GAAE,CAACb,IAOJ,OACE,6BACE,SAAC,EAAD,CAAYR,SAPI,SAAAE,GAClBoB,QAAQC,IAAIrB,GACZa,EAAgB,CAAEP,OAAQN,GAC3B,KAKG,SAACsB,EAAA,EAAD,CAAWxC,OAAQ2B,MAGxB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmList\":\"MovieList_filmList__W3QeZ\",\"filmCard\":\"MovieList_filmCard__E6kgn\",\"filmPoster\":\"MovieList_filmPoster__RnSdS\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieList.module.css';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.filmList}>\n      {movies?.map(({ id, title, poster_path, popularity }) => (\n        <li key={id} className={css.filmCard}>\n          <Link to={`/movie/${id}`} state={{ from: location }}>\n            <img\n              className={css.filmPoster}\n              src={\n                poster_path !== null\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : `https://static.thenounproject.com/png/2712910-200.png`\n              }\n              alt={title}\n            />\n            <h2>{title}</h2>\n            <p>{popularity}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useState } from 'react';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleSerch = e => {\n    const querry = e.target.value;\n    setSearch(querry);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    onSubmit(search);\n  };\n\n  return (\n    <form onSubmit={formSubmit}>\n      <input type=\"text\" onChange={handleSerch} value={search} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { apiSearchFilms } from 'services/ApiFilms';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n\n  const [querryParams, setQuerryParams] = useSearchParams();\n\n  const querry = querryParams.get('querry');\n\n  useEffect(() => {\n    if (querry === null) {\n      return;\n    }\n    apiSearchFilms(querry).then(({ data }) => setSearchFilms(data.results));\n  }, [querry]);\n\n  const querryInput = search => {\n    console.log(search);\n    setQuerryParams({ querry: search });\n  };\n\n  return (\n    <main>\n      <SearchForm onSubmit={querryInput} />\n      <MovieList movies={searchFilms} />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["movies","location","useLocation","className","css","map","id","title","poster_path","popularity","Link","to","state","from","src","alt","onSubmit","useState","search","setSearch","e","preventDefault","type","onChange","querry","target","value","searchFilms","setSearchFilms","useSearchParams","querryParams","setQuerryParams","get","useEffect","apiSearchFilms","then","data","results","console","log","MovieList"],"sourceRoot":""}